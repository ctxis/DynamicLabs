---
# Create local user
#
# Parameters:
# name = user name (required)
# description = user description
# password = user password. Autogenerated if not specified. 
# shell = user shell (default /bin/zsh)
# groups = comma separated list of groups to add the user to
# 
# NOTE: the password is only set at creation time. Subsequent password changes
#       in the template will not be reflected on the account.
#
# Example:
#            {
#                name = "MacOS_User"
#                value = [
#                    { name = "LocalUser1" }, # Local user with random password
#                    { # Local user with password, description, belonging to group "wheel"
#                       name = "LocalUser2", 
#                       password = "Welcome123!!", 
#                       description = "Such and such", 
#                       groups = "wheel"} 
#                  ]
#            }

# Save the user password 

- set_fact:
    user_password: "{{ item.password }}"
  when: item.password is defined

- local_action:
    module: file
    path: "{{ '~/credentials/local/' + custom_hostname }}"
    state: directory
  when: item.password is defined

- local_action:
    module: copy
    dest: "{{ '~/credentials/local/' + custom_hostname + '/' + item.name }}"
    content: "{{ item.password }}"
  when: item.password is defined

- set_fact:
    user_password: "{{ lookup('password', '~/credentials/local/' + custom_hostname + '/' + item.name + ' chars=ascii_letters,digits,punctuation length=12') }}"
  when: item.password is not defined

- debug:
    var: user_password

- user:
    name: "{{ item.name }}"
    comment: "{{ item.comment | default() }}"
    shell: "{{ item.shell | default('/bin/zsh')}}"
    group: "staff"
    groups: "{{ item.groups | default() }}"
    append: yes
    # MacOS accepts the clear-text password
    password: "{{ user_password }}"
    # MacOS requires the old password to update an account's password
    update_password: "on_create"
    expires: -1  